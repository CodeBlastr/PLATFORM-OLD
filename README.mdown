# ZuHa is a complete business management system on an MVC framework for maximum ease and expandability.

Our primary goal is to provide a single system that handles your business process from start to finish.  From leads generated by your website, to tracking those leads through your sales funnel, all the way to managing and fulfilling service and product requests.  

We further seek to solve the problem faced by many website systems, where in order to have multiple functions (like ecommerce, CRM, CMS, project management, social networking, groups, messaging, multi-user blogs, forums, events, wikis or any combination of those sub systems), you would at a minimum be forced to combine 2 systems or more into one by somehow convincing the two (or more) systems to talk each other. 

# March 2011 Accomplishments

Another solid month of development is near being put in the history books.  But just checkout the accomplishments...

* 1 : Favorites.  You can not add any object to a favorites or wish list. 

* 2 : Calendars.  The beginning of a calendars tool has been scaffolded.  With the idea that calendars are for display of data, and events would be a separate plugin which would be that data.  This also allows us to easily create calendars from any other object, including Project Issues, Contact Opportunities, Priorities, Tasks, etc. 

* 3 : Events.  Create events, event profiles, event venues, and event seating framework db structure started.  With the understanding that calendars would simply be a way of displaying when these events occur and probably link through to the actual event profile. 

* 4 : Invites.  In order to invite people using your facebook friends or email.

* 5 : New Gallery Type Added.  We have implemented a new gallery to which supports zoom.  This should make a great addition to the ecommerce section as well as for just regular galleries of merchandise. 

* 6 : Credits.  You can now use credits instead of money to checkout.  You can also earn credits as a user for any action on the site by using conditions and workflows. 

* 7 : Maps.  A google maps tie in has been developed for inputting multiple locations, and then running a search which returns a map with those locations as markers.  It includes marker text/html so that you can also specify what text is in the marker. 

* 8 : Deal A Day Ecommerce.  You can now use a simple template tag on your homepage to make a deal a day website using the exisitng ecommerce platform.  

* 9 : Rss.  The beginning of an rss feed aggregator has been developed for outputting page content based on many rss feeds, and a news section so that you can attach any object to the news, and therefore output an rss feed of the latest updates to your site. 

* 10 : Payment Options.  New payment options for Authorize.net ARB, Authorize.net CIM, and Paypal, and credits added. 

* 11 : Shipping Options. New calculated shipping option for FedEx added. 


# February 2011 Accomplishments

* 1 : Demo site setup. You can now demo the CMS and watch the first tutorial video.  [Update] A second tutorial video is available on the demo site : http://demo.zuha.com

* 2 : Categories.  The full implementation of site wide categories is now setup.  A single db table now handles all categories across your site for each system.  This keeps your db nice and small and limits the number of tables needed. 

* 3 : Estimates.  Now along with projects, you can have a stand alone estimate that may become a project, and/or many estimates for a single project so that the beginning work is done to support a freelancer / guru type of site, and for simply sending estimates to your existing or potential clients. 

* 4 : Facebook.  You can now login via facebook, invite via facebook, and all other Facebook connect options.  

* 5 : Ratings.  You can now attach ratings and comments along with those ratings to any object in the database.  So if you want to add ratings for projects, catalog items, webpages, or even other comments its as simple as attaching the behavior and adding the ratings element.

* 6 : Search.  A configurable search option for making any object within your site searchable.  Return results from webpages, catalog items, projects, and configure how they display, and drill down for results from only a single section to return more results. 

* 7 : Tags.  Tag anything has been implemented, but not overly tested.  The ability is there but actual use cases need to be tested for full endorsement. 

* 8 : Wikis Reworked.  In order to take advantage of the categories plugin, we have reworked wikis and gotten rid of wiki_categories.

* 9 : Workflows Retested and Upgraded.  Our application building functionality is getting more and more use and is really turning out to be a super-powerful piece of code for building very high functionality in a fraction of the time. 


# January 2011 Accomplishments

* 1 : Contextual Database Driven Elements  - Menus are always a pain spot with CMS platforms, because its difficult to manage particular links appearing only on particular pages.  But with ZuHa it will be far easier than any CMS before it.  Or for that matter, using contextual elements of any kind (they don't have to be menus).  By coupling with inline context editing, this will allow you to set very custom menus if you choose (on a per page basis) and edit the items that appear in the menu for that page, by simply visiting the page, and clicking edit.  And because it uses a nice regex piece of code, you can have the menu update across as many pages as its been set for with a single update.

* 2 : Updated Workflows & Conditions - Some use case testing, and real world examples were tested using conditions and workflows. The arrays for how to interact with these conditions and workflows were made much easier, and more extensible.  To put it more simply, an entire site with very custom functionality was built in two days, which would have taken a month before.  This was because with "conditions" we could say... "When this happens trigger this."  And with workflows, we could say when triggered all of these follow up items need to happen.  A specific example might look like, "When a project is created, (condition is met), create a forum with the same name, that is related to this project.  And that is just one of many workflow items that were automated from that single action of creating a project.

* 3 : High Level View and Index Customization of System Pages - If custom forms weren't enough (note : with custom forms you can basically control the fields in your database), we put in the basic building blocks that allow you to have complete control over which information appears when viewing records or indexes of that information.  To put it simply, you will have an administration area that allows you to easily control which fields are being shown, even if its different across multiple sites, using a single view file.  It would be like, starting a blog and changing a setting (instead of paying a developer) to customize the data displayed on the index page.

* 4 : Easier Content Management - Stealing a page from the wiki world, you can now add new content to your site by simply visiting the url you would like that content to reside at while logged in as an admin.  If the page does not already exist, you will be prompted to see if you would like to add that page.  Meanwhile non-admin users will still receive the 404 error page.

* 5 : Easy Css Editing - You can now create as many css files as you need to using the user interface instead of ftp.  Even for the multi-site setups.  Now adding a template to the CMS system is much easier, because you only need to copy and paste your html into a template file, and your css into a css file, and instantly your site will have a new look and feel.  Add a few template tags, (like : {helper: content_for_layout}) to the html and you have a very powerful site up and running in no time.


# December 2010 Accomplishments

* 1 : Record Level Access Control  -  We're just a few days in, and already we've accomplished a substantial performance update to ACL (access level control).  What a huge headache, but its a huge piece of working code now.  Next up on this front, is to make it even more fine grained by allowing record level access beyond the record, and down to the action.  And with all of that fine grained control you'd think the user interface was going to be a huge monstrosity, but its unbelievably light.  You just visit the plugin you want to control access for, click a couple of checkboxes and thats it.  Permissions on the fly, down to the record level.

* 2 : Inline page editing  -  With most CMS systems you visit the administration portion of the site to edit webpages.  With ZuHa you edit webpages while you are looking at the webpages.  INCLUDING :: menus, side bar elements, footers, etc.  You can edit a site wide element from any webpage from the CMS, and it will update the entire site instantly.  Next up on this front is the auto-saving, and drafts, and histories for webpages.  

* 3 : Any format API Functionality (default views)  - ZuHa also got a big upgrade this month regarding API functionality, as in, moving it towards a REST type of application, and reusable view code.  You can now create a single admin_edit.ctp file and it will automatically be used for all admin_edit methods that don't already have a view.  The added bonus to this upgrade is that it opened up a full API where you can easily control output formatting with a simple extension change. For example, /orders/order_transactions/view/1.xml, /orders/order_transactions.json would both automatically (without creating any new files) output the variables declared in the controller in the xml or json format.  This functionality will allow us to quickly port information from a web interface to a pdf, or rss, or mobile applications as necessary in future upgrades. 

* 4 : Forums - We've integrated a forums plugin and are continuing to test it in various use cases.  Since everyone knows what a forum is and what its for, there isn't a ton to write about here, but the main idea is that because it uses our ACL setup you have fine grained control over users, and who has access to which parts of the forum, making it a great conversational tool for an intranet or a public forum. 

* 5 : Social Networking - ZuHa has integrated an array of social networking functions incluing, groups, profiles, walls, statuses, and following (friends).  Its not overly advanced at the moment, but the bulk of the work that is left on this is making it high customizable, because user profiles are always a very custom section of the site.  More work to do here, but its funded so will go quickly.

* 6 : Image Galleries - The ZuHa image galleries are very advanced and available to every single system within ZuHa.  This plugin is a GREAT example of the power behind an all in one integrated system.  By having your systems speak to each other by default, it becomes natural for your user profiles to instantly create a gallery when they upload their avatar.  And when you add a catalog item, to make an image gallery for that catalog item.  All while instantly having this content available to any other section of the system.  So if you want, a catalog item gallery to show up in forums, or on user profiles, it is literally about a 30 character template tag that looks like this... {element: galleries.thumb.3}

* 7 : Ecommerce - We're well on our way to making a whole new take on ecommerce with benefits that an all in one system has that no other ecommerce platform  has out of the box.  With all of your systems built in by default, your ecommerce site will be fully integrated into your other systems.  So if you want your social networking users to be able to post items for sale in your store... just edit the site permissions, and add a few links and you have Social Ecommerce.  This social ecommerce niche benefit was a totally unexpected but welcome benefit from the all in one system. 


# November 2010 Accomplishments

What a killer few weeks its been...

In just the last 4-6 weeks we have made huge improvements to zuha, and it is much closer to being the business development and collaboration platform we've been envisioning!  I might even dare say it is feeling very close to being the most technically advanced CMS I know of.   In just the last few weeks this is what has been accomplished...

* 1 : Built in custom forms  -  Forms can now be built 100% through a user interface that the end user can use.  No php or html coding required.  But heres the great part!  That user created form is related to already existing features and as you add fields it will automatically update the structure of the database so that data automatically gets saved to the place where it is most usable!!!  Such as a contact lead or quote request.  And in case you don't instantly envision what this functionality really means...  It is the beginning of the ability to create entire business applications.  (ie. customer support tickets, user generated webpages, quotes, invoices, and more) all through a user interface where you just plug form elements in and set their visibility type add, edit and view.  All while keeping everything around the form 100% editable through the inline page editor mentioned below.

* 2 : Workflows -  One action, can automatically trigger a whole series of follow up actions.  Think about a customer support request, and how once it comes in, you want a few people notified, you may want reminders to go out on the due date, you may need to make a quote to fill the ticket request, and maybe you want that user put into your customer retention email newsletter.   With workflows you can automate all of the routine follow up tasks that go with that action.  (heck you can even create automatic actions from just a page view -- So if a logged in user visits page x, maybe we would send them a text message letting them know you thought they'd be interested in page z!  OR when someone fills out a contact page, send them an email every day for the next 6 months - pounding them until they buy that product they were looking at!)

* These two things working together mean that we can develop at about twice the speed, because we'd only need to write the "text messaging" function for example, and then handle all of the user interaction with that function through workflows and custom forms.  


* 3 : Mutli Site Support -  If you host with us a single install of this software can host an unlimited number of websites, and each website can be fully customized without effecting any other site, all while leaving the core system fully upgradeable.  This has the added benefit of every single function we make for one site being automatically available to EVERY other site.  So if your customer x, wants the text messaging feature added, we build it, and every other customer now has the ability to text message from their site... instantly.

* 4 : In Line Page Editing  -   In support of becoming the ultimate easy CMS we have nearly completed the ability to edit your website pages WHILE looking at your website pages.  You can edit your webpages using an inline WYSIWYG editor --- and if it is the sidebar for example (a site wide element) - you would be updating your entire site, from any page on the site!!!! 

* 5 : Record Level Access Control  -   You can manage every single page of your site and control who has access to it down to the individual record level.  You can create new user groups and create whole sections of your site which only they have access to.   All through a user interface consisting of clicking some checkboxes next to the pages or sections you want user groups to access. 


## Installation Tips
* Php 5.3 or higher is required.  (Seriously, anything lower will not work.)

* Upload the files to the root directory (Your server is required to have .htaccess and mod_rewrite turned on)
 
* Ceate a database.php file in ROOT/app/config/ using ROOT/app/config/database.default.php as a template, fixing the variables with correct values. 
 
* Import ROOT/zuha_dirty.sql  OR ROOT/zuha_clean.sql -  We strive to keep the "clean" version as free of data as possible, and the dirty version can often include testing data that you may need to delete, but also may help with getting started. 
 
* ZuHa works best when installed at a root domain or subdomain of a site.  (ex. myDomain.com OR subDomain.myDomain.com OR subDomain.localhost).
 
* It is possible to get it to get a Hello World setup inside a sub directory, but you must rename or delete the ROOT/.htaccess file.  However, please note : webroot files (css / js / etc) will not work without further customization.  So its virtually worthless to use it in sub directories.
 
* Once you have a working view of the site you can login with the user "admin" and the password "test" in order to gain access to every available page. 
 
 
 
## Documentation

[ZuHa Foundation](http://zuha.org/) - promoting development related to ZuHa

[ZuHa Book](http://book.zuha.com/)

[ZuHa RoadMap Wiki](https://cakeforge.org/plugins/wiki/index.php?ProjectRoadMap&id=392&type=g)

[ZuHa Forum](https://cakeforge.org/forum/?group_id=392)

[About ZuHa](http://zuha.com/about)

[Submit Ideas for Zuha](http://sourceforge.net/apps/ideatorrent/zuha/)

[CakePHP](http://www.cakephp.org) - the rapid development PHP framework

[CakePHP Cookbook](http://book.cakephp.org) - user documentation for learning about CakePHP



## Reporting issues

[Submit Issues on Github.com](https://github.com/zuha/zuha/issues) 

## Versions

Pre-alpha

## License

GPL Version 3 (and future versions)